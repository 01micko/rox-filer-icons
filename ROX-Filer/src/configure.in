dnl Process this file with autoconf to produce a configure script.
AC_INIT(main.c)
AC_CONFIG_HEADER(config.h)

AC_ARG_WITH(platform,
[  --with-platform	  platform name, as detected by AppRun],
[AC_SUBST(with_platform)],
[
AC_MSG_ERROR([

Please do not run 'configure' manually - instead, run the AppRun script with
the --compile option, like this:
	$ ROX-Filer/AppRun --compile

Thank you.
])
])

if test -z "$PKG_CONFIG"; then
  PKG_CONFIG=pkg-config
fi
AC_SUBST(PKG_CONFIG)

AC_MSG_CHECKING(that pkg-config runs)
if "$PKG_CONFIG" --version > /dev/null 2>&1 ; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  AC_MSG_ERROR([*** $PKG_CONFIG missing ***

\'$PKG_CONFIG --version\' failed to run - make sure it is inside one of the
directories in your PATH environment variable!

pkg-config comes with the developement packages for GTK+-2.0, available at:

    http://www.gtk.org])
fi

AC_DEFUN(ROX_REQUIRE, [
AC_MSG_CHECKING(that $1 (version >= $2) is installed)
if "$PKG_CONFIG" --atleast-version=$2 $1 ; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  if "$PKG_CONFIG" --exists $1 ; then
    AC_MSG_ERROR(Current version is only `"$PKG_CONFIG" "$1" --modversion`)
  else
    AC_MSG_ERROR(Package is not installed)
  fi
fi
])

ROX_REQUIRE(gtk+-2.0, 2.0.0)
ROX_REQUIRE(libxml-2.0, 2.0.0)

dnl Checks for programs.
AC_PROG_CC

dnl Use -Wall if possible
[
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
]

dnl Find the X libraries
AC_PATH_XTRA
if test x$no_x = xyes ; then
  AC_MSG_ERROR([X development libraries not found])
fi
LIBS="$LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
CFLAGS="$CFLAGS $X_CFLAGS"

dnl Does file(1) support '-b' ?
AC_MSG_CHECKING(whether file -b works)
if file -b / > /dev/null 2> /dev/null
then
  AC_DEFINE(FILE_B_FLAG)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for large file support)
if getconf LFS64_CFLAGS > /dev/null 2> /dev/null; then
  AC_MSG_RESULT(yes)
  LFS_CFLAGS="`getconf LFS_CFLAGS`"
  LFS_LDFLAGS="`getconf LFS_LDFLAGS`"
  LFS_LIBS="`getconf LFS_LIBS`"
  AC_DEFINE(LARGE_FILE_SUPPORT)
else
  AC_MSG_RESULT(no)
  LFS_CFLAGS=""
  LFS_LDFLAGS=""
  LFS_LIBS=""
fi
AC_SUBST(LFS_CFLAGS)
AC_SUBST(LFS_LDFLAGS)
AC_SUBST(LFS_LIBS)

dnl Checks for header files.
AC_PATH_X
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h mntent.h sys/ucred.h sys/mntent.h)
AC_CHECK_HEADERS(regex.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(gethostname unsetenv mkdir rmdir strdup strtol getopt_long)

dnl Extract version info from AppInfo.xml
AC_MSG_CHECKING(extracting version information)
[
VERSION=`sed -n 's/^.*<Version>\([.0-9]*\).*<\/Version>.*$/\1/p' ../AppInfo.xml`
]
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_MSG_RESULT(version $VERSION)

AC_OUTPUT(Makefile)
